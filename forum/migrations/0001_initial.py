# Generated by Django 3.2.7 on 2021-09-18 06:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(default='Untagged', max_length=100, unique=True)),
                ('usernames', models.JSONField(default=list)),
                ('issues', models.JSONField(default=list)),
                ('comments', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('reputation', models.IntegerField(default=0)),
                ('rollno', models.CharField(default='', max_length=20)),
                ('facebook', models.CharField(default='#', max_length=150)),
                ('twitter', models.CharField(default='#', max_length=150)),
                ('instagram', models.CharField(default='#', max_length=150)),
                ('linkedin', models.CharField(default='#', max_length=150)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('reputation', models.IntegerField(default=0)),
                ('tags', models.JSONField(default=dict)),
                ('rollno', models.CharField(default='', max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(default='(Not available)', max_length=100)),
                ('summary', models.TextField(default='(Not available)', max_length=200)),
                ('description', models.TextField(default='(Not available)', max_length=750)),
                ('image', models.ImageField(blank=True, upload_to='forum/images/')),
                ('tracked', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('status', models.TextField(default='', max_length=300)),
                ('date', models.DateField(auto_now_add=True)),
                ('author', models.CharField(default='Anonymous', max_length=50)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('votes', models.IntegerField(default=0)),
                ('tvotes', models.IntegerField(default=0)),
                ('tags', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-votes', '-date'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('username', models.CharField(default='Anonymous', max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('votes', models.IntegerField(default=0)),
                ('slug', models.SlugField(default='testing', max_length=255)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forum.issue')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
